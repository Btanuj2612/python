#linear search
arr=[4,2,5,7,9,1.3]
target=1.3

found=False
for i in range(len(arr)):
    if arr[i]==target:
        print(f"element{target}found at index{i}")
        found=True
        break
else:
    print(f"element{target}is not in array")
    
   #linear search
lst=[]
n=int(input("enter the number"))
for j in range (0,n):
    element=int(input())
    lst.append(element)

target=int(input("enter the number"))

found=False
for i in range(len(arr)):
    if arr[i]==target:
        print(f"element{target}found at index{i}")
        found=True
        break
else:
    print(f"element{target}is not in array")
    
    
#bubble sort
arr=[1,3,5,7,9,11,13,15,17,19]
target=11
low=0
high=len(arr)-1
while low<=high:
    mid=(low+high)//2
    if arr[mid]==target:
        print(f"elemnt{target}found at index{mid}")
        break
    elif arr[mid]<target:
        low=mid+1
    else:
        high=mid-1
else:
    print(f"element is not in the sequence")
    
    
#binary sort
    lst = []

# Input number of elements
n = int(input("Enter the number of elements: "))

# Input elements into the list
for j in range(n):
    element = int(input())
    lst.append(element)

# Display the list
print("List:", lst)

# Input target value to search for
target = int(input("Enter the number to search for: "))



# Initialize pointers for binary search
low = 0
high = len(lst) - 1

# Perform binary search
while low <= high:
    mid = (low + high) // 2
    if lst[mid] == target:
        print(f"Element {target} found at index {mid}")
        break
    elif lst[mid] < target:
        low = mid + 1
    else:
        high = mid - 1
else:
    print("Element is not in the list")
        
    
